{"version":3,"file":"togeojson.js","sources":["../lib/shared.js","../lib/gpx.js","../lib/tcx.js","../lib/kml.js"],"sourcesContent":["// cast array x into numbers\n// get the content of a text node, if any\nexport function nodeVal(x) {\n  if (x && x.normalize) {\n    x.normalize();\n  }\n  return (x && x.textContent) || \"\";\n}\n\n// one Y child of X, if any, otherwise null\nexport function get1(x, y) {\n  const n = x.getElementsByTagName(y);\n  return n.length ? n[0] : null;\n}","import { nodeVal, get1 } from \"./shared\";\n\nfunction getLineStyle(extensions) {\n  const style = {};\n  if (extensions) {\n    const lineStyle = get1(extensions, \"line\");\n    if (lineStyle) {\n      const color = nodeVal(get1(lineStyle, \"color\")),\n        opacity = parseFloat(nodeVal(get1(lineStyle, \"opacity\"))),\n        width = parseFloat(nodeVal(get1(lineStyle, \"width\")));\n      if (color) style.stroke = color;\n      if (!isNaN(opacity)) style[\"stroke-opacity\"] = opacity;\n      // GPX width is in mm, convert to px with 96 px per inch\n      if (!isNaN(width)) style[\"stroke-width\"] = (width * 96) / 25.4;\n    }\n  }\n  return style;\n}\n\n// get the contents of multiple text nodes, if present\nfunction getMulti(x, ys) {\n  const o = {};\n  let n;\n  let k;\n  for (k = 0; k < ys.length; k++) {\n    n = get1(x, ys[k]);\n    if (n) o[ys[k]] = nodeVal(n);\n  }\n  return o;\n}\nfunction getProperties(node) {\n  const prop = getMulti(node, [\n    \"name\",\n    \"cmt\",\n    \"desc\",\n    \"type\",\n    \"time\",\n    \"keywords\",\n  ]);\n  // Parse additional data from our Garmin extension(s)\n  const extensions = node.getElementsByTagNameNS(\n    \"http://www.garmin.com/xmlschemas/GpxExtensions/v3\",\n    \"*\"\n  );\n  for (let i = 0; i < extensions.length; i++) {\n    const extension = extensions[i];\n    // Ignore nested extensions, like those on routepoints or trackpoints\n    if (extension.parentNode.parentNode === node) {\n      prop[extension.tagName.replace(\":\", \"_\")] = nodeVal(extension);\n    }\n  }\n  const links = node.getElementsByTagName(\"link\");\n  if (links.length) prop.links = [];\n  for (let i = 0; i < links.length; i++) {\n    prop.links.push(\n      Object.assign(\n        { href: links[i].getAttribute(\"href\") },\n        getMulti(links[i], [\"text\", \"type\"])\n      )\n    );\n  }\n  return prop;\n}\n\nfunction coordPair(x) {\n  const ll = [\n    parseFloat(x.getAttribute(\"lon\")),\n    parseFloat(x.getAttribute(\"lat\")),\n  ];\n  const ele = get1(x, \"ele\");\n  // handle namespaced attribute in browser\n  const heartRate = get1(x, \"gpxtpx:hr\") || get1(x, \"hr\");\n  const time = get1(x, \"time\");\n  let e;\n  if (ele) {\n    e = parseFloat(nodeVal(ele));\n    if (!isNaN(e)) {\n      ll.push(e);\n    }\n  }\n  const result = {\n    coordinates: ll,\n    time: time ? nodeVal(time) : null,\n    extendedValues: [],\n  };\n\n  if (heartRate) {\n    result.extendedValues.push([\"heartRate\", parseFloat(nodeVal(heartRate))]);\n  }\n\n  const extensions = get1(x, \"extensions\");\n  if (extensions !== null) {\n    for (const name of [\"speed\", \"course\", \"hAcc\", \"vAcc\"]) {\n      const v = parseFloat(nodeVal(get1(extensions, name)));\n      if (!isNaN(v)) {\n        result.extendedValues.push([name, v]);\n      }\n    }\n  }\n  return result;\n}\nfunction getRoute(node) {\n  const line = getPoints(node, \"rtept\");\n  if (!line) return;\n  return {\n    type: \"Feature\",\n    properties: Object.assign(\n      getProperties(node),\n      getLineStyle(get1(node, \"extensions\")),\n      { _gpxType: \"rte\" }\n    ),\n    geometry: {\n      type: \"LineString\",\n      coordinates: line.line,\n    },\n  };\n}\n\nfunction getPoints(node, pointname) {\n  const pts = node.getElementsByTagName(pointname);\n  if (pts.length < 2) return; // Invalid line in GeoJSON\n\n  const line = [];\n  const times = [];\n  const extendedValues = {};\n  for (let i = 0; i < pts.length; i++) {\n    const c = coordPair(pts[i]);\n    line.push(c.coordinates);\n    if (c.time) times.push(c.time);\n    for (let j = 0; j < c.extendedValues.length; j++) {\n      const [name, val] = c.extendedValues[j];\n      const plural = name + \"s\";\n      if (!extendedValues[plural]) {\n        extendedValues[plural] = Array(pts.length).fill(null);\n      }\n      extendedValues[plural][i] = val;\n    }\n  }\n  return {\n    line: line,\n    times: times,\n    extendedValues: extendedValues,\n  };\n}\n\nfunction getTrack(node) {\n  const segments = node.getElementsByTagName(\"trkseg\");\n  const track = [];\n  const times = [];\n  const extractedLines = [];\n\n  for (let i = 0; i < segments.length; i++) {\n    const line = getPoints(segments[i], \"trkpt\");\n    if (line) {\n      extractedLines.push(line);\n      if (line.times && line.times.length) times.push(line.times);\n    }\n  }\n\n  if (extractedLines.length === 0) return;\n\n  const multi = extractedLines.length > 1;\n\n  const properties = Object.assign(\n    getProperties(node),\n    getLineStyle(get1(node, \"extensions\")),\n    { _gpxType: \"trk\" },\n    times.length\n      ? {\n          coordTimes: multi ? times : times[0],\n        }\n      : {}\n  );\n\n  for (let i = 0; i < extractedLines.length; i++) {\n    const line = extractedLines[i];\n    track.push(line.line);\n    for (const [name, val] of Object.entries(line.extendedValues)) {\n      if (multi) {\n        if (!properties[name])\n          properties[name] = extractedLines.map((line) =>\n            new Array(line.line.length).fill(null)\n          );\n        properties[name][i] = val;\n      } else {\n        properties[name] = val;\n      }\n    }\n  }\n\n  return {\n    type: \"Feature\",\n    properties: properties,\n    geometry: multi\n      ? {\n          type: \"MultiLineString\",\n          coordinates: track,\n        }\n      : {\n          type: \"LineString\",\n          coordinates: track[0],\n        },\n  };\n}\n\nfunction getPoint(node) {\n  return {\n    type: \"Feature\",\n    properties: Object.assign(getProperties(node), getMulti(node, [\"sym\"])),\n    geometry: {\n      type: \"Point\",\n      coordinates: coordPair(node).coordinates,\n    },\n  };\n}\n\nexport function* gpxGen(doc) {\n  const tracks = doc.getElementsByTagName(\"trk\");\n  const routes = doc.getElementsByTagName(\"rte\");\n  const waypoints = doc.getElementsByTagName(\"wpt\");\n\n  for (let i = 0; i < tracks.length; i++) {\n    const feature = getTrack(tracks[i]);\n    if (feature) yield feature;\n  }\n  for (let i = 0; i < routes.length; i++) {\n    const feature = getRoute(routes[i]);\n    if (feature) yield feature;\n  }\n  for (let i = 0; i < waypoints.length; i++) {\n    yield getPoint(waypoints[i]);\n  }\n}\n\nexport function gpx(doc) {\n  return {\n    type: \"FeatureCollection\",\n    features: Array.from(gpxGen(doc)),\n  };\n}\n","import { nodeVal, get1 } from \"./shared\";\n\nconst EXTENSIONS_NS = \"http://www.garmin.com/xmlschemas/ActivityExtension/v2\";\n\nconst TRACKPOINT_ATTRIBUTES = [\n  [\"heartRate\", \"heartRates\"],\n  [\"Cadence\", \"cadences\"],\n  // Extended Trackpoint attributes\n  [\"Speed\", \"speeds\"],\n  [\"Watts\", \"watts\"],\n];\n\nconst LAP_ATTRIBUTES = [\n  [\"TotalTimeSeconds\", \"totalTimeSeconds\"],\n  [\"DistanceMeters\", \"distanceMeters\"],\n  [\"MaximumSpeed\", \"maxSpeed\"],\n  [\"AverageHeartRateBpm\", \"avgHeartRate\"],\n  [\"MaximumHeartRateBpm\", \"maxHeartRate\"],\n\n  // Extended Lap attributes\n  [\"AvgSpeed\", \"avgSpeed\"],\n  [\"AvgWatts\", \"avgWatts\"],\n  [\"MaxWatts\", \"maxWatts\"],\n];\n\nfunction fromEntries(arr) {\n  const obj = {};\n  for (const [key, value] of arr) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nfunction getProperties(node, attributeNames) {\n  const properties = [];\n\n  for (const [tag, alias] of attributeNames) {\n    let elem = get1(node, tag);\n    if (!elem) {\n      const elements = node.getElementsByTagNameNS(EXTENSIONS_NS, tag);\n      if (elements.length) {\n        elem = elements[0];\n      }\n    }\n    const val = parseFloat(nodeVal(elem));\n    if (!isNaN(val)) {\n      properties.push([alias, val]);\n    }\n  }\n\n  return properties;\n}\n\nfunction coordPair(x) {\n  const lon = nodeVal(get1(x, \"LongitudeDegrees\"));\n  const lat = nodeVal(get1(x, \"LatitudeDegrees\"));\n  if (!lon.length || !lat.length) {\n    return null;\n  }\n  const ll = [parseFloat(lon), parseFloat(lat)];\n  const alt = get1(x, \"AltitudeMeters\");\n  const heartRate = get1(x, \"HeartRateBpm\");\n  const time = get1(x, \"Time\");\n  let a;\n  if (alt) {\n    a = parseFloat(nodeVal(alt));\n    if (!isNaN(a)) {\n      ll.push(a);\n    }\n  }\n  return {\n    coordinates: ll,\n    time: time ? nodeVal(time) : null,\n    heartRate: heartRate ? parseFloat(nodeVal(heartRate)) : null,\n    extensions: getProperties(x, TRACKPOINT_ATTRIBUTES),\n  };\n}\n\nfunction getPoints(node, pointname) {\n  const pts = node.getElementsByTagName(pointname);\n  const line = [];\n  const times = [];\n  if (pts.length < 2) return null; // Invalid line in GeoJSON\n  const result = { extendedProperties: {} };\n  for (let i = 0; i < pts.length; i++) {\n    const c = coordPair(pts[i]);\n    if (c === null) continue;\n    line.push(c.coordinates);\n    if (c.time) times.push(c.time);\n    for (const [alias, value] of c.extensions) {\n      if (!result.extendedProperties[alias]) {\n        result.extendedProperties[alias] = Array(pts.length).fill(null);\n      }\n      result.extendedProperties[alias][i] = value;\n    }\n  }\n  return Object.assign(result, {\n    line: line,\n    times: times,\n  });\n}\n\nfunction getLap(node) {\n  const segments = node.getElementsByTagName(\"Track\");\n  const track = [];\n  const times = [];\n  const allExtendedProperties = [];\n  let line;\n  const properties = fromEntries(getProperties(node, LAP_ATTRIBUTES));\n  for (let i = 0; i < segments.length; i++) {\n    line = getPoints(segments[i], \"Trackpoint\");\n    if (line) {\n      track.push(line.line);\n      if (line.times.length) times.push(line.times);\n      allExtendedProperties.push(line.extendedProperties);\n    }\n  }\n  for (let i = 0; i < allExtendedProperties.length; i++) {\n    const extendedProperties = allExtendedProperties[i];\n    for (const property in extendedProperties) {\n      if (segments.length === 1) {\n        properties[property] = line.extendedProperties[property];\n      } else {\n        if (!properties[property]) {\n          properties[property] = track.map((track) =>\n            Array(track.length).fill(null)\n          );\n        }\n        properties[property][i] = extendedProperties[property];\n      }\n    }\n  }\n  if (track.length === 0) return;\n  if (times.length)\n    properties.coordTimes = track.length === 1 ? times[0] : times;\n  return {\n    type: \"Feature\",\n    properties: properties,\n    geometry: {\n      type: track.length === 1 ? \"LineString\" : \"MultiLineString\",\n      coordinates: track.length === 1 ? track[0] : track,\n    },\n  };\n}\n\nexport function* tcxGen(doc) {\n  const laps = doc.getElementsByTagName(\"Lap\");\n\n  for (let i = 0; i < laps.length; i++) {\n    const feature = getLap(laps[i]);\n    if (feature) yield feature;\n  }\n}\n\nexport function tcx(doc) {\n  return {\n    type: \"FeatureCollection\",\n    features: Array.from(tcxGen(doc)),\n  };\n}\n","import { nodeVal, get1 } from \"./shared\";\n\nconst removeSpace = /\\s*/g;\nconst trimSpace = /^\\s*|\\s*$/g;\nconst splitSpace = /\\s+/;\n\n// generate a short, numeric hash of a string\nfunction okhash(x) {\n  if (!x || !x.length) return 0;\n  let h = 0;\n  for (let i = 0; i < x.length; i++) {\n    h = ((h << 5) - h + x.charCodeAt(i)) | 0;\n  }\n  return h;\n}\n\n// get one coordinate from a coordinate array, if any\nfunction coord1(v) {\n  return v.replace(removeSpace, \"\").split(\",\").map(parseFloat);\n}\n\n// get all coordinates from a coordinate array as [[],[]]\nfunction coord(v) {\n  return v.replace(trimSpace, \"\").split(splitSpace).map(coord1);\n}\n\nfunction xml2str(node) {\n  if (node.xml !== undefined) return node.xml;\n  if (node.tagName) {\n    let output = node.tagName;\n    for (let i = 0; i < node.attributes.length; i++) {\n      output += node.attributes[i].name + node.attributes[i].value;\n    }\n    for (let i = 0; i < node.childNodes.length; i++) {\n      output += xml2str(node.childNodes[i]);\n    }\n    return output;\n  }\n  if (node.nodeName === \"#text\") {\n    return (node.nodeValue || node.value || \"\").trim();\n  }\n  if (node.nodeName === \"#cdata-section\") {\n    return node.nodeValue;\n  }\n  return \"\";\n}\n\nconst geotypes = [\"Polygon\", \"LineString\", \"Point\", \"Track\", \"gx:Track\"];\n\nfunction kmlColor(properties, elem, prefix) {\n  let v = nodeVal(get1(elem, \"color\")) || \"\";\n  const colorProp =\n    prefix == \"stroke\" || prefix === \"fill\" ? prefix : prefix + \"-color\";\n  if (v.substr(0, 1) === \"#\") {\n    v = v.substr(1);\n  }\n  if (v.length === 6 || v.length === 3) {\n    properties[colorProp] = v;\n  } else if (v.length === 8) {\n    properties[prefix + \"-opacity\"] = parseInt(v.substr(0, 2), 16) / 255;\n    properties[colorProp] =\n      \"#\" + v.substr(6, 2) + v.substr(4, 2) + v.substr(2, 2);\n  }\n}\n\nfunction numericProperty(properties, elem, source, target) {\n  const val = parseFloat(nodeVal(get1(elem, source)));\n  if (!isNaN(val)) properties[target] = val;\n}\n\nfunction gxCoords(root) {\n  let elems = root.getElementsByTagName(\"coord\");\n  const coords = [];\n  const times = [];\n  if (elems.length === 0) elems = root.getElementsByTagName(\"gx:coord\");\n  for (let i = 0; i < elems.length; i++) {\n    coords.push(nodeVal(elems[i]).split(\" \").map(parseFloat));\n  }\n  const timeElems = root.getElementsByTagName(\"when\");\n  for (let j = 0; j < timeElems.length; j++) times.push(nodeVal(timeElems[j]));\n  return {\n    coords: coords,\n    times: times,\n  };\n}\n\nfunction getGeometry(root) {\n  let geomNode;\n  let geomNodes;\n  let i;\n  let j;\n  let k;\n  const geoms = [];\n  const coordTimes = [];\n  if (get1(root, \"MultiGeometry\")) {\n    return getGeometry(get1(root, \"MultiGeometry\"));\n  }\n  if (get1(root, \"MultiTrack\")) {\n    return getGeometry(get1(root, \"MultiTrack\"));\n  }\n  if (get1(root, \"gx:MultiTrack\")) {\n    return getGeometry(get1(root, \"gx:MultiTrack\"));\n  }\n  for (i = 0; i < geotypes.length; i++) {\n    geomNodes = root.getElementsByTagName(geotypes[i]);\n    if (geomNodes) {\n      for (j = 0; j < geomNodes.length; j++) {\n        geomNode = geomNodes[j];\n        if (geotypes[i] === \"Point\") {\n          geoms.push({\n            type: \"Point\",\n            coordinates: coord1(nodeVal(get1(geomNode, \"coordinates\"))),\n          });\n        } else if (geotypes[i] === \"LineString\") {\n          geoms.push({\n            type: \"LineString\",\n            coordinates: coord(nodeVal(get1(geomNode, \"coordinates\"))),\n          });\n        } else if (geotypes[i] === \"Polygon\") {\n          const rings = geomNode.getElementsByTagName(\"LinearRing\"),\n            coords = [];\n          for (k = 0; k < rings.length; k++) {\n            coords.push(coord(nodeVal(get1(rings[k], \"coordinates\"))));\n          }\n          geoms.push({\n            type: \"Polygon\",\n            coordinates: coords,\n          });\n        } else if (geotypes[i] === \"Track\" || geotypes[i] === \"gx:Track\") {\n          const track = gxCoords(geomNode);\n          geoms.push({\n            type: \"LineString\",\n            coordinates: track.coords,\n          });\n          if (track.times.length) coordTimes.push(track.times);\n        }\n      }\n    }\n  }\n  return {\n    geoms: geoms,\n    coordTimes: coordTimes,\n  };\n}\n\nfunction getPlacemark(root, styleIndex, styleMapIndex, styleByHash) {\n  const geomsAndTimes = getGeometry(root);\n  let i;\n  const properties = {};\n  const name = nodeVal(get1(root, \"name\"));\n  const address = nodeVal(get1(root, \"address\"));\n  let styleUrl = nodeVal(get1(root, \"styleUrl\"));\n  const description = nodeVal(get1(root, \"description\"));\n  const timeSpan = get1(root, \"TimeSpan\");\n  const timeStamp = get1(root, \"TimeStamp\");\n  const extendedData = get1(root, \"ExtendedData\");\n  let iconStyle = get1(root, \"IconStyle\");\n  let labelStyle = get1(root, \"LabelStyle\");\n  let lineStyle = get1(root, \"LineStyle\");\n  let polyStyle = get1(root, \"PolyStyle\");\n  const visibility = get1(root, \"visibility\");\n\n  if (name) properties.name = name;\n  if (address) properties.address = address;\n  if (styleUrl) {\n    if (styleUrl[0] !== \"#\") {\n      styleUrl = \"#\" + styleUrl;\n    }\n\n    properties.styleUrl = styleUrl;\n    if (styleIndex[styleUrl]) {\n      properties.styleHash = styleIndex[styleUrl];\n    }\n    if (styleMapIndex[styleUrl]) {\n      properties.styleMapHash = styleMapIndex[styleUrl];\n      properties.styleHash = styleIndex[styleMapIndex[styleUrl].normal];\n    }\n    // Try to populate the lineStyle or polyStyle since we got the style hash\n    const style = styleByHash[properties.styleHash];\n    if (style) {\n      if (!iconStyle) iconStyle = get1(style, \"IconStyle\");\n      if (!labelStyle) labelStyle = get1(style, \"LabelStyle\");\n      if (!lineStyle) lineStyle = get1(style, \"LineStyle\");\n      if (!polyStyle) polyStyle = get1(style, \"PolyStyle\");\n    }\n  }\n  if (description) properties.description = description;\n  if (timeSpan) {\n    const begin = nodeVal(get1(timeSpan, \"begin\"));\n    const end = nodeVal(get1(timeSpan, \"end\"));\n    properties.timespan = { begin: begin, end: end };\n  }\n  if (timeStamp) {\n    properties.timestamp = nodeVal(get1(timeStamp, \"when\"));\n  }\n  if (iconStyle) {\n    kmlColor(properties, iconStyle, \"icon\");\n    numericProperty(properties, iconStyle, \"scale\", \"icon-scale\");\n    numericProperty(properties, iconStyle, \"heading\", \"icon-heading\");\n\n    const hotspot = get1(iconStyle, \"hotSpot\");\n    if (hotspot) {\n      const left = parseFloat(hotspot.getAttribute(\"x\"));\n      const top = parseFloat(hotspot.getAttribute(\"y\"));\n      if (!isNaN(left) && !isNaN(top)) properties[\"icon-offset\"] = [left, top];\n    }\n    const icon = get1(iconStyle, \"Icon\");\n    if (icon) {\n      const href = nodeVal(get1(icon, \"href\"));\n      if (href) properties.icon = href;\n    }\n  }\n  if (labelStyle) {\n    kmlColor(properties, labelStyle, \"label\");\n    numericProperty(properties, labelStyle, \"scale\", \"label-scale\");\n  }\n  if (lineStyle) {\n    kmlColor(properties, lineStyle, \"stroke\");\n    numericProperty(properties, lineStyle, \"width\", \"stroke-width\");\n  }\n  if (polyStyle) {\n    kmlColor(properties, polyStyle, \"fill\");\n    const fill = nodeVal(get1(polyStyle, \"fill\"));\n    const outline = nodeVal(get1(polyStyle, \"outline\"));\n    if (fill)\n      properties[\"fill-opacity\"] =\n        fill === \"1\" ? properties[\"fill-opacity\"] || 1 : 0;\n    if (outline)\n      properties[\"stroke-opacity\"] =\n        outline === \"1\" ? properties[\"stroke-opacity\"] || 1 : 0;\n  }\n  if (extendedData) {\n    const datas = extendedData.getElementsByTagName(\"Data\"),\n      simpleDatas = extendedData.getElementsByTagName(\"SimpleData\");\n\n    for (i = 0; i < datas.length; i++) {\n      properties[datas[i].getAttribute(\"name\")] = nodeVal(\n        get1(datas[i], \"value\")\n      );\n    }\n    for (i = 0; i < simpleDatas.length; i++) {\n      properties[simpleDatas[i].getAttribute(\"name\")] = nodeVal(simpleDatas[i]);\n    }\n  }\n  if (visibility) {\n    properties.visibility = nodeVal(visibility);\n  }\n  if (geomsAndTimes.coordTimes.length) {\n    properties.coordTimes =\n      geomsAndTimes.coordTimes.length === 1\n        ? geomsAndTimes.coordTimes[0]\n        : geomsAndTimes.coordTimes;\n  }\n  const feature = {\n    type: \"Feature\",\n    geometry:\n      geomsAndTimes.geoms.length === 0\n        ? null\n        : geomsAndTimes.geoms.length === 1\n        ? geomsAndTimes.geoms[0]\n        : {\n            type: \"GeometryCollection\",\n            geometries: geomsAndTimes.geoms,\n          },\n    properties: properties,\n  };\n  if (root.getAttribute(\"id\")) feature.id = root.getAttribute(\"id\");\n  return feature;\n}\n\nexport function* kmlGen(doc) {\n  // styleindex keeps track of hashed styles in order to match feature\n  const styleIndex = {};\n  const styleByHash = {};\n  // stylemapindex keeps track of style maps to expose in properties\n  const styleMapIndex = {};\n  // atomic geospatial types supported by KML - MultiGeometry is\n  // handled separately\n  // all root placemarks in the file\n  const placemarks = doc.getElementsByTagName(\"Placemark\");\n  const styles = doc.getElementsByTagName(\"Style\");\n  const styleMaps = doc.getElementsByTagName(\"StyleMap\");\n\n  for (let k = 0; k < styles.length; k++) {\n    const hash = okhash(xml2str(styles[k])).toString(16);\n    styleIndex[\"#\" + styles[k].getAttribute(\"id\")] = hash;\n    styleByHash[hash] = styles[k];\n  }\n  for (let l = 0; l < styleMaps.length; l++) {\n    styleIndex[\"#\" + styleMaps[l].getAttribute(\"id\")] = okhash(\n      xml2str(styleMaps[l])\n    ).toString(16);\n    const pairs = styleMaps[l].getElementsByTagName(\"Pair\");\n    const pairsMap = {};\n    for (let m = 0; m < pairs.length; m++) {\n      pairsMap[nodeVal(get1(pairs[m], \"key\"))] = nodeVal(\n        get1(pairs[m], \"styleUrl\")\n      );\n    }\n    styleMapIndex[\"#\" + styleMaps[l].getAttribute(\"id\")] = pairsMap;\n  }\n  for (let j = 0; j < placemarks.length; j++) {\n    const feature = getPlacemark(\n      placemarks[j],\n      styleIndex,\n      styleMapIndex,\n      styleByHash\n    );\n    if (feature) yield feature;\n  }\n}\n\nexport function kml(doc) {\n  return {\n    type: \"FeatureCollection\",\n    features: Array.from(kmlGen(doc)),\n  };\n}\n"],"names":["getProperties","coordPair","getPoints"],"mappings":"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"}